_name: funlib_unet

num_lsds: 10
num_affs: 3

backbone:
  model_class: nseg.shared.get_funlib_unet
  num_fmaps: 14
  offset: [40, 40, 40]
#  offset: [36, 212, 212]
  # inp_shape: [160, 160, 160]
  inp_shape: [84, 268, 268]
  ev_inp_shape: [84, 268, 268]
  init_kwargs:
    enable_batch_norm: true
#    ds_fact: [[1, 3, 3], [1, 3, 3], [3, 3, 3]]
    ds_fact: [[2, 2, 2], [2, 2, 2]]
#    num_fmaps_out: 14
    num_fmaps: ${..num_fmaps}
    num_heads: 2
    active_head_ids: [0, 1]  # segmentation head, hardness learning head
    detached_head_ids: [1, ]  # gradient detach hardness learning head


finalize_hardness_kwargs:
  hardness_c: 0.1
  normalization_mode: sum_numel

# hardness_head:
#   model_class: nseg.shared.HardnessHead
#   init_kwargs:
#     in_channels: ${model.backbone.num_fmaps}
#     out_channels: 1
#     gradient_detached: true


# Formula for suitable input shapes: 44 + 4*n, where n is an integer >= 0
